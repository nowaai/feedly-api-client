plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
}

group = 'client'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.guava:guava:28.2-jre"
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka:2.4.4.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.5.RELEASE'
    implementation 'org.postgresql:postgresql:42.2.11'

    implementation 'org.apache.kafka:kafka-clients:2.4.0'
    testImplementation ('org.springframework.kafka:spring-kafka-test:2.4.4.RELEASE') {
        exclude module: 'kafka_2.11'
    }
    testImplementation 'org.apache.kafka:kafka-clients:2.4.0:test'
    testImplementation 'org.apache.kafka:kafka_2.12:2.4.0'
    testImplementation 'org.apache.kafka:kafka_2.12:2.4.0:test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testCompile("org.junit.jupiter:junit-jupiter")
    testRuntime("org.junit.platform:junit-platform-launcher")
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams true
    }
}

jar {
    manifest {
        attributes "Main-Class" : "client.App"
    }
}
